name: CI

on:
  push:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Pull Postgres Docker Image
        run: docker pull postgres:latest

      - name: Pull ASP.NET CORE Application Image from Docker repository
        run: docker pull filipus01/hermes:latest

      - name: Create Docker Network
        run: docker network create hermes-network

      - name: Start Postgres Container
        run: |
          docker run -d \
            --name postgres \
            --network hermes-network \
            -e POSTGRES_DB="${{ secrets.POSTGRES_DB }}" \
            -e POSTGRES_USER="${{ secrets.POSTGRES_USER }}" \
            -e POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" \
            -p 5432:5432 \
            postgres:latest

      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash

      - name: Start ASP.NET Core Container
        run: |
          docker run -d \
            --name hermes.server \
            --network hermes-network \
            -e ENVIRONMENT="${{ secrets.ENVIRONMENT }}" \
            -e CONNECTION_STRING="Host=postgres;Database=${{ secrets.POSTGRES_DB }};Username=${{ secrets.POSTGRES_USER }};Password=${{ secrets.POSTGRES_PASSWORD }}" \
            -e TEST_CONNECTION_STRING="Host=postgres;Port=5432;Database=${{ secrets.TEST_POSTGRES_DB }};Username=${{ secrets.POSTGRES_USER }};Password=${{ secrets.POSTGRES_PASSWORD }}" \
            -e TEST_POSTGRES_DB="${{ secrets.TEST_POSTGRES_DB }}" \
            -e SMTP_SERVER="${{ secrets.SMTP_SERVER }}" \
            -e PORT="${{ secrets.PORT }}" \
            -e EMAIL_SENDER_USERNAME="${{ secrets.EMAIL_SENDER_USERNAME }}" \
            -e EMAIL_SENDER_PASSWORD="${{ secrets.EMAIL_SENDER_PASSWORD }}" \
            -e REACT_CLIENT_URL="${{ secrets.REACT_CLIENT_URL }}" \
            -e ADMIN_EMAIL="${{ secrets.ADMIN_EMAIL }}" \
            -e ALARM_EMAIL="${{ secrets.ALARM_EMAIL }}" \
            -e ADMIN_PASSWORD="${{ secrets.ADMIN_PASSWORD }}" \
            -e VALIDATION_TOKEN="${{ secrets.VALIDATION_TOKEN }}" \
            -p 8080:8080 \
            filipus01/hermes:latest

      - name: Check lifetime of Docker containers
        run: docker ps

      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 20.15.0

      - name: Install dependencies
        uses: bahmutov/npm-install@v1.6.0

      - name: Build React App
        run: npm run build

      - name: Check lifetime of Docker containers
        run: docker ps -a

      - name: Cypress
        uses: cypress-io/github-action@v6.5.0
        env:
          VITE_SERVER_URL: "${{ secrets.VITE_SERVER_URL }}"
          VITE_CLIENT_URL: "${{ secrets.VITE_CLIENT_URL }}"
          CYPRESS_LOCALHOST: ${{ secrets.CYPRESS_LOCALHOST }}
          CYPRESS_EMAIL: ${{ secrets.CYPRESS_EMAIL }}
          CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}
          CYPRESS_INV_EMAIL: "${{ secrets.CYPRESS_INV_EMAIL }}"
          CYPRESS_CLIENT_URL: "${{ secrets.CYPRESS_CLIENT_URL }}"
          CYPRESS_SERVER_URL: "${{ secrets.CYPRESS_SERVER_URL }}"
          CYPRESS_TEST_EMAIL: "${{ secrets.CYPRESS_TEST_EMAIL }}"
          CYPRESS_TEST_TOKEN: "${{ secrets.CYPRESS_TEST_TOKEN }}"
        with:
          start: npx vite --host
          wait-on: "http://localhost:5173"

      - name: upload screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
